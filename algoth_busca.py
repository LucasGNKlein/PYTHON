# -*- coding: utf-8 -*-
"""algoth_busca.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Svk-kpdtyMiyJiU7eMheufuC6ZZHZsxO
"""

from collections import deque

"""---

Alfabeto para gerar tentativas e senha de teste.

---


"""

alfabeto = ["A", "B", "C"]

senha_correta = "CAB"

"""---

Busca em profundidade (DFS), com o caminho percorrido.

---
"""

def dfs(tentativa, max_len, visitados):
    visitados.append(tentativa)  # marca a tentativa atual

    # Se achou a senha
    if tentativa == senha_correta:
        return True

    # Se passou do tamanho máximo
    if len(tentativa) >= max_len:
        return False

    # Continua explorando
    for letra in alfabeto:
        nova = tentativa + letra
        if dfs(nova, max_len, visitados):
            return True
    return False

"""---

Busca em Largura (BFS) com log do caminho que foi percorrido.

---
"""

def bfs(max_len):
    fila = deque([""])   # começa com vazio
    visitados = []

    while fila:
        tentativa = fila.popleft()
        visitados.append(tentativa)

        if tentativa == senha_correta:
            return visitados

        if len(tentativa) < max_len:
            for letra in alfabeto:
                fila.append(tentativa + letra)
    return visitados

"""---

Testando.

---
"""

visitados_dfs = []
dfs("", len(senha_correta), visitados_dfs)
print("DFS - Tentativas percorridas:")
print(" -> ".join(visitados_dfs))

visitados_bfs = bfs(len(senha_correta))
print("\nBFS - Tentativas percorridas:")
print(" -> ".join(visitados_bfs))